---
version: '2.0'

# networks
networks:
  guacnetwork_compose:
    driver: bridge # create a network 'guacnetwork_compose' in mode 'bridged'

# services
services:
  # guacd
  guacd:
    container_name: guacd_compose
    image: guacamole/guacd
    networks:
      guacnetwork_compose:
    restart: always
    volumes:
    - ${DOCKERDATA}guacamole/drive:/drive:rw
    - ${DOCKERDATA}guacamole/record:/record:rw
  # postgres
  postgres:
    container_name: postgres_guacamole_compose
    environment:
      PGDATA: /var/lib/postgresql/data/guacamole
      POSTGRES_DB: guacamole_db
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
    image: postgres:13.4-buster
    networks:
      guacnetwork_compose:
    restart: always
    volumes:
    - .${DOCKERDATA}guacamole/init:/docker-entrypoint-initdb.d:z
    - .${DOCKERDATA}guacamole/data:/var/lib/postgresql/data:Z

  # guacamole
  guacamole:
    container_name: guacamole_compose
    depends_on:
    - guacd
    - postgres
    environment:
      GUACD_HOSTNAME: guacd
      POSTGRES_DATABASE: guacamole_db
      POSTGRES_HOSTNAME: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
    image: guacamole/guacamole
    links:
    - guacd
    networks:
      guacnetwork_compose:
    ports:
    - 8080:8080/tcp # Guacamole is on :8080/guacamole, not /.
    restart: always

   # nginx
  nginx:
   container_name: nginx_guacamole_compose
   restart: always
   image: nginx
   volumes:
   - ${DOCKERDATA}guacamole/nginx.conf:/etc/nginx/nginx.conf:ro
   - ${DOCKERDATA}guacamole/mysite.template:/etc/nginx/conf.d/default.conf:ro
   ports:
   - 8888:80
   links:
   - guacamole
   networks:
    guacnetwork_compose:
   # run nginx
   command: /bin/bash -c "nginx -g 'daemon off;'"